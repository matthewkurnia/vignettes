[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://game/materials/noise.tres" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D gradient: hint_black;
uniform sampler2D noise_texture;
uniform float contrast = 5.0;

float normalized(float x) {
	return max(min(x, 1.0), 0.0);
}

float get_grain(float x, float a) {
	x += -0.5;
	a += -0.5;
	return normalized(contrast*(x + a) + 0.5);
}

void fragment() {
//	Samples red channel only (black and white)
	float noise_r = texture(noise_texture, UV).r;
	float value_r = texture(TEXTURE, UV).r;
	float alpha = get_grain(noise_r, value_r);
//	COLOR.rgb = vec3(red, red, red);
	COLOR.rgb = texture(gradient, vec2(normalized(length(UV - vec2(0.5))), 0.0)).rgb;
	COLOR.a = 1.0 - alpha;
}"

[sub_resource type="Gradient" id=2]
colors = PoolColorArray( 0.136475, 0.140657, 0.167969, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/contrast = 5.0
shader_param/gradient = SubResource( 3 )
shader_param/noise_texture = ExtResource( 1 )
