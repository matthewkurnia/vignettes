[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://game/materials/noise.tres" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_mul;

uniform vec4 color : hint_color;
uniform sampler2D noise_texture;
uniform float contrast = 5.0;

float normalized(float x) {
	return max(min(x, 1.0), 0.0);
}

float get_grain(float x, float a) {
	x += -0.5;
	a += -0.5;
	return normalized(contrast*(x + a) + 0.5);
}

void fragment() {
//	Samples red channel only (black and white)
	float noise = texture(noise_texture, UV).r;
	float value = texture(TEXTURE, UV).r;
	float alpha = get_grain(noise, value);
	COLOR.rgb = clamp(color.rgb + vec3(alpha), vec3(0.0), vec3(1.0));
//	COLOR.rgb = mix(color.rgb, vec3(1.0), alpha);
//	COLOR.a = alpha;
//	COLOR = texture(TEXTURE, UV);
}"

[resource]
shader = SubResource( 1 )
shader_param/color = Color( 0.933333, 0.207843, 0.0901961, 1 )
shader_param/contrast = 20.0
shader_param/noise_texture = ExtResource( 1 )
