[gd_scene load_steps=32 format=2]

[ext_resource path="res://addons/rmsmartshape/materials/shape_material.gd" type="Script" id=1]
[ext_resource path="res://addons/rmsmartshape/shapes/shape_open.gd" type="Script" id=2]
[ext_resource path="res://addons/rmsmartshape/vertex_properties.gd" type="Script" id=3]
[ext_resource path="res://addons/rmsmartshape/shapes/point_array.gd" type="Script" id=4]
[ext_resource path="res://addons/rmsmartshape/shapes/point.gd" type="Script" id=5]
[ext_resource path="res://addons/rmsmartshape/shapes/shape_meta.gd" type="Script" id=6]
[ext_resource path="res://addons/rmsmartshape/materials/edge_material.gd" type="Script" id=7]
[ext_resource path="res://addons/rmsmartshape/normal_range.gd" type="Script" id=8]
[ext_resource path="res://addons/rmsmartshape/materials/edge_material_metadata.gd" type="Script" id=9]
[ext_resource path="res://gizmo/spikes/spikes2.png" type="Texture" id=10]
[ext_resource path="res://gizmo/spikes/spikes1.png" type="Texture" id=11]
[ext_resource path="res://game/color_node.gd" type="Script" id=12]
[ext_resource path="res://decoration/sprites/soft_noise.png" type="Texture" id=13]

[sub_resource type="Resource" id=1]
script = ExtResource( 3 )
texture_idx = 0
flip = false
width = 1.0

[sub_resource type="Resource" id=2]
script = ExtResource( 5 )
position = Vector2( -70, -17.25 )
point_in = Vector2( 0, 0 )
point_out = Vector2( 0, 0 )
properties = SubResource( 1 )

[sub_resource type="Resource" id=3]
script = ExtResource( 3 )
texture_idx = -6
flip = false
width = 1.0

[sub_resource type="Resource" id=4]
script = ExtResource( 5 )
position = Vector2( 186, -113.25 )
point_in = Vector2( 0, 0 )
point_out = Vector2( 0, 0 )
properties = SubResource( 3 )

[sub_resource type="Resource" id=5]
script = ExtResource( 4 )
_points = {
3: SubResource( 2 ),
4: SubResource( 4 )
}
_point_order = [ 3, 4 ]
_constraints = {
}
_next_key = 3

[sub_resource type="Resource" id=6]
script = ExtResource( 1 )
_edge_meta_materials = [  ]
fill_textures = [  ]
fill_texture_normals = [  ]
fill_texture_z_index = -10
fill_mesh_offset = 0.0
render_offset = 0.0

[sub_resource type="Shader" id=7]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform float rotation = 0.0;
uniform sampler2D noise;
uniform sampler2D mask;
uniform float frequency_x = 1.0;
uniform float frequency_y = 1.0;
uniform float amplitude = 3.0;
uniform vec2 tile_factor = vec2(1.0, 1.0);

vec2 rotate_uv(vec2 uv, vec2 pivot, float rot) {
    float sine = sin(rot);
    float cosine = cos(rot);

    uv -= pivot;
	float new_x = uv.x * cosine - uv.y * sine;
	float new_y = uv.x * sine + uv.y * cosine;
    uv.x = new_x;
    uv.y = new_y;
    uv += pivot;

    return uv;
}

void fragment() {
	vec2 tiled_uv = rotate_uv(UV * tile_factor, vec2(0.5), rotation);
	vec2 t_uv = UV + vec2(TIME*frequency_x, TIME * frequency_y);
	tiled_uv += texture(noise, t_uv).rg * amplitude;
	tiled_uv.x += amplitude * sin(TIME * frequency_x + tiled_uv.y * frequency_x);
	tiled_uv.y += amplitude * cos(TIME * frequency_y + tiled_uv.x * frequency_y);
	COLOR = texture(TEXTURE, tiled_uv);
	COLOR.a *= texture(mask, UV).a;
	
}"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/rotation = 0.0
shader_param/frequency_x = -0.15
shader_param/frequency_y = 0.04
shader_param/amplitude = 0.05
shader_param/tile_factor = Vector2( 1, 1 )
shader_param/noise = ExtResource( 13 )

[sub_resource type="Resource" id=9]
script = ExtResource( 7 )
textures = [ ExtResource( 11 ) ]
texture_normals = [  ]
textures_corner_outer = [  ]
textures_corner_inner = [  ]
texture_normals_corner_outer = [  ]
texture_normals_corner_inner = [  ]
textures_taper_left = [  ]
textures_taper_right = [  ]
texture_normals_taper_left = [  ]
texture_normals_taper_right = [  ]
randomize_texture = false
use_corner_texture = true
use_taper_texture = true
fit_mode = 0
material = SubResource( 8 )

[sub_resource type="Resource" id=10]
script = ExtResource( 8 )
begin = 0.0
distance = 0.0
edgeRendering = Vector2( 0, 0 )

[sub_resource type="Resource" id=11]
script = ExtResource( 9 )
edge_material = SubResource( 9 )
normal_range = SubResource( 10 )
weld = true
render = true
z_index = 0
z_as_relative = true
offset = 0.0

[sub_resource type="Resource" id=12]
script = ExtResource( 1 )
_edge_meta_materials = [ SubResource( 11 ) ]
fill_textures = [  ]
fill_texture_normals = [  ]
fill_texture_z_index = -10
fill_mesh_offset = 0.0
render_offset = 0.0

[sub_resource type="Shader" id=13]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform float rotation = 0.0;
uniform sampler2D noise;
uniform sampler2D mask;
uniform float frequency_x = 1.0;
uniform float frequency_y = 1.0;
uniform float amplitude = 3.0;
uniform vec2 tile_factor = vec2(1.0, 1.0);

vec2 rotate_uv(vec2 uv, vec2 pivot, float rot) {
    float sine = sin(rot);
    float cosine = cos(rot);

    uv -= pivot;
	float new_x = uv.x * cosine - uv.y * sine;
	float new_y = uv.x * sine + uv.y * cosine;
    uv.x = new_x;
    uv.y = new_y;
    uv += pivot;

    return uv;
}

void fragment() {
	vec2 tiled_uv = rotate_uv(UV * tile_factor, vec2(0.5), rotation);
	vec2 t_uv = UV + vec2(TIME*frequency_x, TIME * frequency_y);
	tiled_uv += texture(noise, t_uv).rg * amplitude;
	tiled_uv.x += amplitude * sin(TIME + tiled_uv.y * frequency_x);
	tiled_uv.y += amplitude * cos(TIME + tiled_uv.x * frequency_x);
	COLOR = texture(TEXTURE, tiled_uv);
	COLOR.a *= texture(mask, UV).a;
	
}"

[sub_resource type="ShaderMaterial" id=14]
resource_local_to_scene = true
shader = SubResource( 13 )
shader_param/rotation = 0.0
shader_param/frequency_x = 0.3
shader_param/frequency_y = 0.1
shader_param/amplitude = 0.04
shader_param/tile_factor = Vector2( 1, 1 )
shader_param/noise = ExtResource( 13 )

[sub_resource type="Resource" id=15]
script = ExtResource( 7 )
textures = [ ExtResource( 10 ) ]
texture_normals = [  ]
textures_corner_outer = [  ]
textures_corner_inner = [  ]
texture_normals_corner_outer = [  ]
texture_normals_corner_inner = [  ]
textures_taper_left = [  ]
textures_taper_right = [  ]
texture_normals_taper_left = [  ]
texture_normals_taper_right = [  ]
randomize_texture = false
use_corner_texture = true
use_taper_texture = true
fit_mode = 1
material = SubResource( 14 )

[sub_resource type="Resource" id=16]
script = ExtResource( 8 )
begin = 0.0
distance = 0.0
edgeRendering = Vector2( 0, 0 )

[sub_resource type="Resource" id=17]
script = ExtResource( 9 )
edge_material = SubResource( 15 )
normal_range = SubResource( 16 )
weld = true
render = true
z_index = 0
z_as_relative = true
offset = 0.0

[sub_resource type="Resource" id=18]
script = ExtResource( 1 )
_edge_meta_materials = [ SubResource( 17 ) ]
fill_textures = [  ]
fill_texture_normals = [  ]
fill_texture_z_index = -10
fill_mesh_offset = 0.0
render_offset = 0.0

[node name="Spikes" type="Node2D"]
position = Vector2( 6, 17.25 )
script = ExtResource( 6 )
_points = SubResource( 5 )
material_overrides = {
}
shape_material = SubResource( 6 )
tessellation_stages = 5
tessellation_tolerence = 4.0
flip_edges = false
render_edges = true
collision_size = 32.0
collision_offset = 0.0
collision_polygon_node_path = NodePath("")

[node name="Spikes2" type="Node2D" parent="."]
script = ExtResource( 2 )
_points = SubResource( 5 )
material_overrides = {
}
shape_material = SubResource( 12 )
tessellation_stages = 5
tessellation_tolerence = 4.0
flip_edges = false
render_edges = true
collision_size = 32.0
collision_offset = 0.0
collision_polygon_node_path = NodePath("")

[node name="Spikes1" type="Node2D" parent="."]
script = ExtResource( 2 )
_points = SubResource( 5 )
material_overrides = {
}
shape_material = SubResource( 18 )
tessellation_stages = 5
tessellation_tolerence = 4.0
flip_edges = false
render_edges = true
collision_size = 64.0
collision_offset = 1.0
collision_polygon_node_path = NodePath("../Area2D/CollisionPolygon2D")

[node name="Area2D" type="Area2D" parent="." groups=[
"spikes",
]]
collision_layer = 8
collision_mask = 2

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Area2D"]
modulate = Color( 1, 1, 1, 0.3 )
polygon = PoolVector2Array( -81.2359, -47.2125, 174.764, -143.213, 197.236, -83.2875, -58.764, 12.7125 )

[node name="ColorNode" type="Node2D" parent="."]
script = ExtResource( 12 )
layer = 2
remote_path = NodePath("../Spikes2")
modulate_color = false
